services:
  # Odoo service
  odoo:
    container_name: ${COMPOSE_PROJECT_NAME}_odoo
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ODOO_VERSION: ${ODOO_VERSION}
        ODOO_REQUIREMENTS: ${ODOO_REQUIREMENTS}
    depends_on:
      - db
    ports:
      - "${ODOO_EXPOSED_PORT}:${ODOO_INTERNAL_PORT}"
#    command: odoo --upgrade-path=/mnt/extra-addons/openupgrade_scripts/scripts --update all --stop-after-init --load=base,web,openupgrade_framework
    volumes:
      - ${ODOO_CONFIG}:/etc/odoo
      - ${ODOO_ADDONS}:/mnt/extra-addons
      - ${ODOO_LOG}:/var/log/odoo
      - odoo_data:/var/lib/odoo
    networks:
      - internal_network
    environment:
      - HOST=db
      - DATABASE=postgres
      - USER=odoo
      - PASSWORD=odoo
#    restart: always

  # Database service
  db:
    image: postgres:${POSTGRES_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    networks:
      - internal_network
    restart: always

  # Reverse proxy service
#  https-portal:
#    image: steveltn/https-portal:latest
#    ports:
#      - '80:80'
#      - '443:443'
#    restart: always
#    depends_on:
#      - web
#    environment:
#      DOMAINS: 'zoltar283.site -> http://web:8069'
#      STAGE: 'staging'
#      # FORCE_RENEW: 'true'
#    volumes:
#      - https-portal-data:/var/lib/https-portal

volumes:
  odoo_data:
    name: ${COMPOSE_PROJECT_NAME}_odoo_data
  db_data:
    name: ${COMPOSE_PROJECT_NAME}_db_data
#  https-portal-data:

networks:
  # Red interna solo para este proyecto
  internal_network:
    name: ${COMPOSE_PROJECT_NAME}_internal
    driver: bridge
